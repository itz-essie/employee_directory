{"version":3,"sources":["components/Header/Jumbotron.js","components/DatatablePage/DatatablePage.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Jumbotron","className","React","Component","DatatablePage","props","rowData","employeeData","map","info","age","dob","image","alt","name","first","src","picture","medium","firstName","lastName","last","phoneNumber","phone","location","city","state","email","itsPopulated","length","console","log","data","columns","label","field","sort","width","rows","striped","bordered","large","Employees","useState","employees","setEmployees","useEffect","axios","get","then","results","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAsBeA,E,4JAjBf,WACE,OACE,qBAAKC,UAAU,4BAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,OAAb,qN,GANgBC,IAAMC,W,iCCmEfC,EApEO,SAACC,GACrB,IAAMC,EAAUD,EAAME,aAAaC,KAAI,SAACC,GACtC,MAAO,CACLC,IAAKD,EAAKE,IAAID,IACdE,MAAO,qBAAKC,IAAKJ,EAAKK,KAAKC,MAAOC,IAAKP,EAAKQ,QAAQC,SACpDC,UAAWV,EAAKK,KAAKC,MACrBK,SAAUX,EAAKK,KAAKO,KACpBC,YAAab,EAAKc,MAClBC,SAAUf,EAAKe,SAASC,KAAO,IAAMhB,EAAKe,SAASE,MACnDC,MAAOlB,EAAKkB,UAIVC,EAAetB,EAAQuB,OAAS,EACtCC,QAAQC,IAAI,CAAEzB,YAEd,IAAM0B,EAAO,CACXC,QAAS,CACP,CACEC,MAAO,MACPC,MAAO,MACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,QACPC,MAAO,QACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,aACPC,MAAO,YACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,YACPC,MAAO,WACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,eACPC,MAAO,cACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,WACPC,MAAO,WACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,QACPC,MAAO,QACPC,KAAM,MACNC,MAAO,MAIXC,KAAMV,GAAgBtB,GAGxB,OAAO,cAAC,IAAD,CAAciC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACT,KAAMA,KCpDrCU,EAZG,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACjBC,EADiB,KACNC,EADM,KAOpB,OALAC,qBAAW,WACPC,IAAMC,IAAI,0CAA0CC,MAAK,SAACC,GAC1DL,EAAaK,EAAQlB,KAAKkB,cAE3B,IAEC,cAAC,EAAD,CAAe3C,aAAeqC,KCCvBO,MATf,WACI,OACI,gCACJ,cAAC,EAAD,IACA,cAAC,EAAD,QCIWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b96570c4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n// By extending the React.Component class, Jumbotron inherits functionality from it\nclass Jumbotron extends React.Component {\nrender() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container\">\n        <h1 className=\"display-4\">Employee Directory</h1>\n        <p className=\"lead\">\n          Looking for an employee's contact information? Begin by typing first couple letters of employee's name, in search field. Click the table header to toggle names in ascending/descending order.\n        </p>\n      </div>\n      {/* <Searchbar handler = {this.props.handler} /> */}\n    </div>\n  )\n};\n};\n\n  \n\nexport default Jumbotron;","import React from \"react\";\nimport { MDBDataTable } from \"mdbreact\";\n\nconst DatatablePage = (props) => {\n  const rowData = props.employeeData.map((info) => {\n    return {\n      age: info.dob.age, \n      image: <img alt={info.name.first} src={info.picture.medium} />,\n      firstName: info.name.first,\n      lastName: info.name.last,\n      phoneNumber: info.phone,\n      location: info.location.city + \",\" + info.location.state,\n      email: info.email,\n    };\n  });\n\n  const itsPopulated = rowData.length > 0;\n  console.log({ rowData });\n\n  const data = {\n    columns: [\n      {\n        label: \"Age\",\n        field: \"age\",\n        sort: \"asc\",\n        width: 150,\n      },\n      {\n        label: \"Image\",\n        field: \"image\",\n        sort: \"asc\",\n        width: 150,\n      },\n      {\n        label: \"First Name\",\n        field: \"firstName\",\n        sort: \"asc\",\n        width: 150,\n      },\n      {\n        label: \"Last Name\",\n        field: \"lastName\",\n        sort: \"asc\",\n        width: 150,\n      },\n      {\n        label: \"Phone Number\",\n        field: \"phoneNumber\",\n        sort: \"asc\",\n        width: 270,\n      },\n      {\n        label: \"Location\",\n        field: \"location\",\n        sort: \"asc\",\n        width: 200,\n      },\n      {\n        label: \"Email\",\n        field: \"email\",\n        sort: \"asc\",\n        width: 200,\n      },\n      \n    ],\n    rows: itsPopulated && rowData,\n  };\n\n  return <MDBDataTable striped bordered large data={data} />;\n};\n\nexport default DatatablePage;\n","import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\"\nimport DatatablePage from \"../components/DatatablePage/DatatablePage\";\n\nconst Employees = () => {\nconst [employees, setEmployees]= useState([]) \n    useEffect( () => {\n        axios.get(\"https://randomuser.me/api/?results=200\").then((results) =>{\n        setEmployees(results.data.results) //rerender of the component...anytime you modify any state or props\n        })\n    }, [])\n    return (\n        <DatatablePage employeeData= {employees}/>\n    )\n}\n\nexport default Employees","import React from \"react\";\nimport Jumbotron from \"./components/Header/Jumbotron\";\nimport Employees from \"./utils/API\";\n\nfunction App() {\n    return (\n        <div>\n    <Jumbotron />\n    <Employees />\n    </div>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}